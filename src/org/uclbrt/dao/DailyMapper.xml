<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="org.uclbrt.dao.DailyMapper">
	<!--<select id="findAllDaily" resultType="org.uclbrt.entity.Daily" parameterType="int">
		select * from `DAILY` where user_id= #{userId}; ;
	</select>
-->
	   
    <select id="getDailyListByUserId" parameterType="int" resultMap="dailyResultMap">
 	select daily.id as d_id,
 	title,body,daily.created_time as d_created_time,
 	daily.modified_time,category_id,user_id,
 	user_name,password,user_login.created_time as user_created_time,role_id
 	from 
 	daily left outer join user_login  ON  daily.`user_id`=user_login.`id`
 	where user_id=#{id}
 	</select> 
 	<select id="getDailyByUserId" parameterType="int" resultMap="dailyResultMap">
 	SELECT daily.id AS d_id,
 	title,body,daily.created_time AS d_created_time,
 	daily.modified_time,category_id,user_id,
 	user_name,PASSWORD,user_login.created_time AS user_created_time,role_id
 	FROM 
 	daily LEFT OUTER JOIN user_login  ON  daily.`user_id`=user_login.`id`
 	WHERE daily.`id`=#{id}
 	</select>   
 	<select id="findAllDaily" resultMap="dailyResultMap">
 	select daily.id as d_id,
 	title,body,daily.created_time as d_created_time,
 	daily.modified_time,category_id,user_id,
 	user_name,password,user_login.created_time as user_created_time,role_id
 	from 
 	daily left outer join user_login  ON  daily.`user_id`=user_login.`id`
 	</select>    
 	<select id="findRecentDaily" resultMap="dailyResultMap">
 	SELECT daily.id AS d_id,
 	title,body,daily.created_time AS d_created_time,
 	daily.modified_time,category_id,user_id,
 	user_name,PASSWORD,user_login.created_time AS user_created_time,role_id
 	FROM 
 	daily LEFT OUTER JOIN user_login  ON  daily.`user_id`=user_login.`id` ORDER BY d_created_time DESC  LIMIT 5
 	</select> 
 	<select id="findUserRecentDaily" parameterType="int" resultMap="dailyResultMap">
 	SELECT daily.id AS d_id,
 	title,body,daily.created_time AS d_created_time,
 	daily.modified_time,category_id,user_id,
 	user_name,PASSWORD,user_login.created_time AS user_created_time,role_id
 	FROM 
 	daily LEFT OUTER JOIN user_login  ON  daily.`user_id`=user_login.`id` where user_id=#{id} ORDER BY d_created_time DESC  LIMIT 5
 	</select> 
 	<select id="getUserArchivesDate" parameterType="int" resultType="java.util.HashMap">
 	SELECT COUNT(*) AS count, DATE_FORMAT( created_time, '%Y-%m') AS created_time FROM `daily`  where user_id =#{id} GROUP BY DATE_FORMAT( created_time, '%Y-%m')  ORDER BY created_time DESC	
	</select> 
	<select id="getUserCategoryList" parameterType="int" resultType="java.util.HashMap">
		SELECT id,category_name FROM `user_category` WHERE user_login_id = #{id}
	</select> 
 	<select id="getCategoryList" resultType="java.util.HashMap">
		SELECT id,category_name FROM `category`
	</select> 
	<select id="findUserCategoryByCategoryName" resultType="java.util.HashMap">
		SELECT * FROM  `user_category` WHERE category_name = #{category_name} and is_delete=0 and user_login_id=#{user_login_id}
	</select> 
	
	<!-- 插入daily -->
	<insert id="addUserCategory" parameterType="org.uclbrt.entity.UserCategory" useGeneratedKeys="true" keyProperty="id">
			INSERT INTO `user_category`(user_login_id,category_name,is_delete)
			VALUE(#{userInfo.id},#{categoryName},#{isDelete})
	</insert>
	<insert id="addUserDailyDetail" >
		INSERT INTO `user_daily_details`(daily_id,user_category_id)
		VALUE(#{daily_id},#{user_category_id})
	</insert>
	<!--<insert id="addUserCategory" parameterType="org.uclbrt.entity.UserCategory" >
			INSERT INTO `user_category`(user_login_id,category_name,is_delete)
			VALUE(#{userInfo.id},#{categoryName},#{isDelete})
	</insert>
	-->
	<!--<insert id="addUserDailyDetail" >
		INSERT INTO `user_daily_details`(daily_id,user_category_id)
		VALUE(#{daily_id},#{user_category_id})
	</insert>
	-->
	
	<insert id="addDaily" parameterType="org.uclbrt.entity.Daily" >
		INSERT INTO `daily`(`title`,`body`,`created_time`,`modified_time`,`category_id`,`user_id` ,`click`)
		VALUES (#{title},#{body},#{created_time},#{modified_time},#{category_id},#{user_id},#{click})
	</insert>
	<insert id="addDailyTag"  >
		INSERT INTO `user_daily_tags`(user_login_id,daily_id,name)
		VALUE(#{userId},#{dailyId},#{name})
	</insert>
	
	<!-- 多对一查询  -->
    <resultMap id="dailyResultMap" type="org.uclbrt.entity.Daily"  >
    <id property="id" column="d_id" />  
    <id property="title" column="title" />  
    <id property="body" column="body" />  
    <id property="createdTime" column="d_created_time" />  
    <id property="modifiedTime" column="modified_time" />
    <id property="categoryId" column="category_id" />  
    <id property="click" column="click" />  
	    <association property="userInfo" resultMap="userResult">     
	    </association>
	    <!--  
	    <collection property="userList" ofType="org.uclbrt.entity.UserCategory">
            <id column="uid" property="uid"/>
        	<result column="uname" property="uname"/>
        </collection>
		--></resultMap>
	 <resultMap id="userResult" type="org.uclbrt.entity.UserLogin">
	  			<id property="id" column="u_id" />  
	            <result property="userName" column="user_name" />  
	            <result property="password" column="password" />  
	            <result property="createdTime" column="user_created_time" />  
	            <result property="roleId" column="role_id" />
	 </resultMap>   
</mapper>